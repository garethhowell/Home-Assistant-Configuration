---
homeassistant:
  customize:
    sensor.shack_environment:
      hidden: true

    sensor.openweathermap_temperature:
      friendly_name: "Ext Temp"
    sensor.openweathermap_humidity:
      friendly_name: "Ext Humidity"
    sensor.external_Temperature_2:
      friendly_name: "External Temperature"

    binary_sensor.cold_outside:
      device_class: cold
    binary_sensor.freezing_outside:
      device_class: cold

mqtt:
  sensor:
    # Temperatures
    - name: "Shed Temperature"
      state_topic: "emon/emonth4/temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Bedroom1 Temperature"
      state_topic: "emon/emonth5/temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Livingroom Temperature"
      state_topic: "emon/emonth6/temperature"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      unit_of_measurement: "°C"
      expire_after: 300

    - name: "External Temperature_2"
      state_topic: "emon/emonth6/external temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Bedroom2 Temperature"
      state_topic: "emon/emonth7/temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Shack Temperature"
      state_topic: "emon/emonth8/temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Bedroom3 Temperature"
      state_topic: "emon/emonth9/temperature"
      unit_of_measurement: "°C"
      device_class: temperature
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    # Humidity
    - name: "Bedroom1 Humidity"
      state_topic: "emon/emonth5/humidity"
      unit_of_measurement: "%"
      device_class: humidity
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Livingroom Humidity"
      state_topic: "emon/emonth6/humidity"
      unit_of_measurement: "%"
      device_class: humidity
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Bedroom2 Humidity"
      state_topic: "emon/emonth7/humidity"
      unit_of_measurement: "%"
      device_class: humidity
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Shack Humidity"
      state_topic: "emon/emonth8/humidity"
      unit_of_measurement: "%"
      device_class: humidity
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

    - name: "Shed Humidity"
      state_topic: "emon/emonth4/humidity"
      unit_of_measurement: "%"
      device_class: humidity
      value_template: "{{ value | float | round(1) }}"
      expire_after: 300

# Indicators that external temps are low
template:
  - binary_sensor:
      - name: cold_outside
        #friendly_name: "Low Temp"
        #entity_id: sensor.external_temperature_2
        state: >
          {% if states('sensor.external_temperature_2') | float  < 5.0 %}
          true
          {% else %}
          false
          {% endif %}
        availability: "{{ not states('sensor.external_temperature_2') in ('unavailable', 'unknown') }}"
      - name: freezing_outside
        #friendly_name: "Freezing!"
        #entity_id: sensor.external_temperature_2
        state: >
          {% if states('sensor.external_temperature_2') | float  < 0.3 %}
          true
          {% else %}
          false
          {% endif %}
        availability: "{{ not states('sensor.external_temperature_2') in ('unavailable', 'unknown') }}"

sensor:
  - platform: template
    sensors:
      wind_state:
        friendly_name: Wind State
        value_template: |

          {% set wind = states("sensor.istneo19_wind_speed") | int %}

          {% if wind <= 2 %}
              {% set b1 = "0. Calm" %}
            {% elif wind <= 5 %}
              {% set b1 = "1. Lght Air"  %}  
            {% elif wind <= 11 %}
              {% set b1 = "2. Lght Brze"  %}  
            {% elif wind <= 19 %}
              {% set b1 = "3. Gntle Brze"  %}  
            {% elif wind <= 28 %}
              {% set b1 = "4. Mod Brze"  %}  
            {% elif wind <= 38 %}
              {% set b1 = "5. Frsh Brze" %}  
            {% elif wind <= 49 %}
              {% set b1 = "6. Strng Brze" %}  
            {% elif wind <= 61 %}
              {% set b1 = "7. Nr Gale" %} 
            {% elif wind <= 74 %}
              {% set b1 = "8. Gale" %}  
            {% elif wind <= 88 %}
              {% set b1 = "9. Svr Gale" %}
            {% else %}
              {% set b1 = "10. Storm" %}
            {% endif %}

          {{ b1 }}

      gusting_wind_state:
        friendly_name: Gusting Wind State
        value_template: |
          {% set wind = states("sensor.istneo19_wind_gust") | int %}

          {% if wind <= 2 %}
              {% set b1 = "0. Calm" %}
            {% elif wind <= 5 %}
              {% set b1 = "1. Lght Air"  %}  
            {% elif wind <= 11 %}
              {% set b1 = "2. Lght Brze"  %}  
            {% elif wind <= 19 %}
              {% set b1 = "3. Gntle Brze"  %}  
            {% elif wind <= 28 %}
              {% set b1 = "4. Mod Brze"  %}  
            {% elif wind <= 38 %}
              {% set b1 = "5. Frsh Brze" %}  
            {% elif wind <= 49 %}
              {% set b1 = "6. Strng Brze" %}  
            {% elif wind <= 61 %}
              {% set b1 = "7. Nr Gale" %} 
            {% elif wind <= 74 %}
              {% set b1 = "8. Gale" %}  
            {% elif wind <= 88 %}
              {% set b1 = "9. Svr Gale" %}
            {% else %}
              {% set b1 = "10. Storm" %}
            {% endif %}

          {{ b1 }}

      overall_wind_state:
        friendly_name: "Overall Wind State"
        value_template: |
          {% set steady = states('sensor.wind_state') %}
          {% set gust = states('sensor.gusting_wind_state') %}
          {% if steady == gust %}
            {{ steady }}
          {% else %}
            {{ steady }}, g. {{ gust }}
          {% endif %}
