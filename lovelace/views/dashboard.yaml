- type: custom:grid-layout
  path: 0
  layout:
    #default
    margin: 0
    grid-gap: var(--custom-layout-card-padding)
    grid-template-columns: repeat(4, 1fr) 0
    grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
    grid-template-areas: |
      "sidebar  .           .         .        ."
      "sidebar  livingroom  bedroom1  bedroom2 ."
      "sidebar  shack       people    .        ."
      "sidebar  footer      footer    footer   ."
    mediaquery:
      #phone
      "(max-width: 800px)":
        grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
        grid-template-columns: 0 repeat(2, 1fr) 0
        grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
        grid-template-areas: |
          ".  .           .        ."
          ".  sidebar     sidebar  ."
          ".  livingroom  bedroom1 ."
          ".  bedroom2    shack    ."
          ".  people      .        ."
          ".  footer      footer   ."
          ".  .           .        ."
      #portrait
      "(max-width: 1200px)":
        grid-gap: var(--custom-layout-card-padding)
        grid-template-columns: repeat(3, 1fr) 0
        grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
        grid-template-areas: |
          "sidebar  .           .        ."
          "sidebar  livingroom  bedroom2 ."
          "sidebar  bedroom1    shack    ."
          "sidebar  people      .        ."
          "sidebar  footer      footer   ."
          "sidebar  .           .        ."
  cards:
    - type: custom:button-card #extra_styles fix
      styles: { card: [display: none] }

    #################################################
    #                                               #
    #                    SIDEBAR                    #
    #                                               #
    #################################################

    - type: vertical-stack
      view_layout:
        grid-area: sidebar
      cards:
        - type: custom:button-card
          entity: sensor.template_sidebar
          template: sidebar

    #          - type: conditional
    #            conditions:
    #              - entity: input_boolean.laundry_display
    #                state: "on"
    #            card:
    #              type: custom:button-card
    #              entity: timer.laundry
    #              hold_action:
    #                action: call-service
    #                service: input_boolean.turn_off
    #                service_data:
    #                  entity_id: input_boolean.laundry_display
    #              template: laundry

    #################################################
    #                                               #
    #                  Livingroom                   #
    #                                               #
    #################################################

    - type: grid
      title: Living Room
      view_layout:
        grid-area: livingroom
      columns: 2
      cards:
        - type: custom:button-card
          entity: climate.livingroom_thermostat
          name: Climate
          hold_action: !include popup/livingroom_climate.yaml
          template:
            - base
            - icon_climate
            - climate
            - circle

        - type: custom:button-card
          entity: switch.livingroom_standard_lamps
          name: Standard Lamps
          template:
            - light
            - icon_shade

        - type: custom:button-card
          entity: switch.ikea_switch03
          name: Charger
          template:
            - base
            - icon_imac

    #################################################
    #                                               #
    #                    Bedroom1                     #
    #                                               #
    #################################################

    - type: grid
      title: Bedroom 1
      view_layout:
        grid-area: bedroom1
      columns: 2
      cards:
        - type: custom:button-card
          entity: climate.bedroom_1_thermostat
          name: Climate
          hold_action: !include popup/bedroom1_climate.yaml
          template:
            - base
            - icon_climate
            - climate

    #################################################
    #                                               #
    #                    Bedroom2                     #
    #                                               #
    #################################################

    - type: grid
      title: Bedroom 2
      view_layout:
        grid-area: bedroom2
      columns: 2
      cards:
        - type: custom:button-card
          entity: climate.bedroom_2_thermostat
          name: Climate
          hold_action: !include popup/bedroom2_climate.yaml
          template:
            - base
            - icon_climate
            - climate

    #################################################
    #                                               #
    #                    Shack                      #
    #                                               #
    #################################################

    - type: grid
      title: Shack
      view_layout:
        grid-area: shack
      columns: 2
      cards:
        - type: custom:button-card
          entity: climate.shack_thermostat
          name: Climate
          hold_action: !include popup/shack_climate.yaml
          template:
            - base
            - icon_climate
            - climate

        - type: custom:button-card
          entity: switch.shack_power_switch
          name: Shack Power
          template:
            - base
            - icon_imac

    #################################################
    #                                               #
    #                     People                     #
    #                                               #
    #################################################

    - type: grid
      title: People
      view_layout:
        grid-area: people
      columns: 2
      cards:
        - type: custom:button-card
          entity: person.gareth_2
          name: Gareth
          #triggers_update:
          #  - sensor.garet
          tap_action: !include popup/people_gareth.yaml
          #variables:
          #  retain: sensor.gareth_last_changed
          template: person

        - type: custom:button-card
          entity: person.varina_2
          name: Varina
          #triggers_update:
          #  - sensor.varina_last_changed
          tap_action: !include popup/people_varina.yaml
          #variables:
          #  retain: sensor.varina_last_changed
          template: person

    #################################################
    #                                               #
    #                    FOOTER                     #
    #                                               #
    #################################################

    - type: horizontal-stack
      view_layout:
        grid-area: footer
      cards:
        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Updates
          tap_action: !include popup/footer/updates.yaml
          variables:
            notify: >
              [[[
                let hass_installed = hass.config.version,
                  hass_version_latest = states['sensor.hass_version_latest'],
                  hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                  hacs = states['sensor.hacs'];

                if (hass_version_latest && hass_version_latest.state.includes('.')
                  && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                  && hacs && Number.isInteger(parseInt(hacs.state))) {

                  let hass_latest = hass_installed.includes('b')
                      ? hass_version_latest_beta.state
                      : hass_version_latest.state,
                    hass_count = hass_installed !== hass_latest ? 1 : 0;
                  return hass_count + parseInt(hacs.state);
                }
                return 0;
              ]]]
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:robot-vacuum-variant"></ha-icon> StÃ¤da
          tap_action: !include popup/footer/vacuum.yaml
          variables:
            notify: >
              [[[
                let last_clean = states['sensor.morty_last_clean_end'],
                  week_ms = 6048e5;
                if (last_clean) {
                  return (Date.now() - Date.parse(last_clean.state)) > week_ms;
                }
              ]]]
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:chart-line-variant"></ha-icon> Historik
          tap_action: !include popup/footer/history.yaml
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:tablet"></ha-icon> Platta
          tap_action: !include popup/footer/tablet.yaml
          variables:
            notify: >
              [[[
                let plugged_in = states['binary_sensor.galaxy_tab_a_plugged_in'];
                if (plugged_in) {
                  return plugged_in.state === 'off';
                }
              ]]]
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:router-wireless"></ha-icon> Router
          tap_action: !include popup/footer/router.yaml
          variables:
            notify: >
              [[[
                let internet = states['binary_sensor.template_udm_internet'],
                  upgradable = states['binary_sensor.template_udm_upgradable'];
                if (internet && upgradable) {
                  return upgradable.state === 'on'
                    ? 1
                    : internet.state === 'off';
                }
              ]]]
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:raspberry-pi"></ha-icon> RPi
          tap_action: !include popup/footer/rpi.yaml
          variables:
            notify: >
              [[[
                let ping = states['binary_sensor.rpi_ping'];
                if (ping) {
                  return ping.state === 'off';
                }
              ]]]
          template: footer
